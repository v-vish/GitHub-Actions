name: Deploy Azure Container App

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the main branch

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Log in to Azure using OpenID Connect (OIDC)
      - name: Azure login with OIDC
        uses: azure/login@v2
        with:
          auth-type: IDENTITY
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      # Step 3: Build and push the Docker image (if you use ACR)
      - name: Build and push Docker image to ACR
        run: |
          az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/myapp:${{ github.sha }} .
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/myapp:${{ github.sha }}

      # Step 4: Deploy the container app using the Azure CLI
      - name: Deploy to Azure Container App
        run: |
          az containerapp up \
            --name my-container-app \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --environment ${{ secrets.AZURE_CONTAINER_ENVIRONMENT }} \
            --image ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/testimage:${{ github.sha }} \
            --ingress external --target-port 80
